/*
********************************************
*      Author:492859377                    *
*      ProblemID:Gym100733H                *
*      VjudgeProblemID:229610              *
*      SubmitTime:2015/8/28 0:48:34        *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:996KB                        *
*      CodeLen:1663B                       *
*      RunTime:31ms                        *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<stack>
#include<queue>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define FIN freopen("input.txt","r",stdin)
#define FOUT freopen("output.txt","w+",stdout)
using namespace std;
typedef long long LL;
typedef pair<int, int>PII;

const int MX = 30 + 5;
const int MS = 1e6 + 5;
const int INF = 0x3f3f3f3f;

int A[MX][MX], cost[MX][MX];

char S[MS];
int main() {
    //FIN;
    while(~scanf("%d", &A[0][0])) {
        memset(cost, INF, sizeof(cost));
        for(int i = 1; i < 26; i++) scanf("%d", &A[0][i]);
        for(int i = 1; i < 26; i++) {
            for(int j = 0; j < 26; j++) {
                scanf("%d", &A[i][j]);
            }
        }

        for(int k = 0; k < 26; k++) {
            for(int i = 0; i < 26; i++) {
                for(int j = 0; j < 26; j++) {
                    A[i][j] = min(A[i][j], A[i][k] + A[k][j]);
                }
            }
        }

        for(int i = 0; i < 26; i++) {
            for(int j = 0; j < 26; j++) {
                for(int k = 0; k < 26; k++) {
                    int s = 0;
                    if(i != k) s += A[i][k];
                    if(j != k) s += A[j][k];
                    cost[i][j] = min(cost[i][j], s);
                }
            }
        }

        scanf("%s", S);
        int n = strlen(S);
        LL ans = 0;
        for(int i = 0; i < n / 2; i++) {
            ans += cost[S[i] - 'a'][S[n - i - 1] - 'a'];
        }
        if(n % 2) ans += cost[S[n / 2] - 'a'][S[n / 2] - 'a'] / 2;
        printf("%I64d\n", ans);
    }
    return 0;
}
