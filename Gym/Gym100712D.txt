/*
********************************************
*      Author:492859377                    *
*      ProblemID:Gym100712D                *
*      VjudgeProblemID:195706              *
*      SubmitTime:2015/7/20 14:55:41       *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:792KB                        *
*      CodeLen:1230B                       *
*      RunTime:0ms                         *
********************************************
*/
#include<cstdio>
#include<cmath>
#include<cstring>
#include<queue>
#include<vector>
#include<functional>
#include<algorithm>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;

const int MX = 1000 + 5;
const int INF = 0x3f3f3f3f;

char S[MX];
int F[MX];
bool d[MX][MX];

int main() {
    //freopen("input.txt", "r", stdin);
    int T, len, K;
    scanf("%d", &T);
    while(T--) {
        memset(d, 0, sizeof(d));
        memset(F, INF, sizeof(F));

        scanf("%d%d%s", &len, &K, S + 1);

        for(int L = 1; L <= len; L++) {
            d[L][L] = 1;
            for(int R = L + 1; R <= len; R++) {
                if(d[L][R - 1] && S[R] != S[R - 1]) {
                    d[L][R] = 1;
                } else break;
            }
            d[L][L] = 0;
        }

        F[1]=0;
        for(int i = 1; i <= len; i++) {
            for(int k = 1; k <= K; k++) {
                if(i + k <= len && !d[i][i + k - 1]) {
                    F[i + k] = min(F[i + k], F[i] + 1);
                }
            }
        }

        int ans = INF;
        for(int i = len - K + 1; i <= len; i++) {
            if(!d[i][len]) ans = min(ans, F[i]);
        }

        printf("%d\n", ans);
    }
    return 0;
}
