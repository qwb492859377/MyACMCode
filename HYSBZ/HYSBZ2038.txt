/*
********************************************
*      Author:492859377                    *
*      ProblemID:HYSBZ2038                 *
*      VjudgeProblemID:36887               *
*      SubmitTime:2015/6/11 13:59:07       *
*      SubmitType:C++                      *
*      Memory:2580KB                       *
*      CodeLen:1876B                       *
*      RunTime:1348ms                      *
********************************************
*/
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;
const int MX=50000+5;
typedef long long LL;

int A[MX],num[MX],m,n,unit;

LL gcd(LL a,LL b){
    return b?gcd(b,a%b):a;
}

struct ANS{
    LL a,b;

    void reduce(){
        LL g=gcd(a,b);
        a/=g;b/=g;
    }
}ans[MX];

struct Query{
    int l,r,id;
    bool operator<(const Query&b)const{
        if(l/unit==b.l/unit){
            if(r==b.r) return l<b.l;
            return r<b.r;
        }
        return l/unit<b.l/unit;
    }
}Q[MX];

void work(){
    LL S=0;
    int L=1,R=0;

    for(int i=1;i<=m;i++){
        while(L<Q[i].l){
            S-=(LL)num[A[L]]*num[A[L]];
            num[A[L]]--;
            S+=(LL)num[A[L]]*num[A[L]];
            L++;
        }
        while(L>Q[i].l){
            L--;
            S-=(LL)num[A[L]]*num[A[L]];
            num[A[L]]++;
            S+=(LL)num[A[L]]*num[A[L]];
        }
        while(R<Q[i].r){
            R++;
            S-=(LL)num[A[R]]*num[A[R]];
            num[A[R]]++;
            S+=(LL)num[A[R]]*num[A[R]];
        }
        while(R>Q[i].r){
            S-=(LL)num[A[R]]*num[A[R]];
            num[A[R]]--;
            S+=(LL)num[A[R]]*num[A[R]];
            R--;
        }

        ans[Q[i].id].a=S-(R-L+1);
        ans[Q[i].id].b=(LL)(R-L+1)*(R-L);
        ans[Q[i].id].reduce();
    }
}

int main(){
    //freopen("input.txt","r",stdin);
    while(~scanf("%d%d",&n,&m)){
        memset(num,0,sizeof(num));

        for(int i=1;i<=n;i++){
            scanf("%d",&A[i]);
        }

        for(int i=1;i<=m;i++){
            scanf("%d%d",&Q[i].l,&Q[i].r);Q[i].id=i;
        }

        unit=sqrt(n+0.5);
        sort(Q+1,Q+1+m);

        work();

        for(int i=1;i<=m;i++){
            printf("%lld/%lld\n",ans[i].a,ans[i].b);
        }
    }
    return 0;
}
