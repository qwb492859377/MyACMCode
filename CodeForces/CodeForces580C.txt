/*
********************************************
*      Author:492859377                    *
*      ProblemID:CodeForces580C            *
*      VjudgeProblemID:246619              *
*      SubmitTime:2015/10/15 23:48:59      *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:7656KB                       *
*      CodeLen:1465B                       *
*      RunTime:62ms                        *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<ctime>
#include<stack>
#include<queue>
#include<cstdio>
#include<cctype>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define fuck printf("fuck")
#define FIN freopen("input.txt","r",stdin)
#define FOUT freopen("output.txt","w+",stdout)
//#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;
typedef long long LL;

const int MX = 1e5 + 5;
const int MS = 2e5 + 5;

struct Edge {
    int v, Next;
} E[MS];
int Head[MX], rear;
void edge_init() {
    rear = 0;
    memset(Head, -1, sizeof(Head));
}
void edge_add(int u, int v) {
    E[rear].v = v;
    E[rear].Next = Head[u];
    Head[u] = rear++;
}

int A[MX];

int DFS(int u, int f, int d, int cnt) {
    cnt = A[u] ? cnt + 1 : 0;
    if(cnt > d) return 0;

    int ret = 0, s = 0;
    for(int i = Head[u]; ~i; i = E[i].Next) {
        int v = E[i].v;
        if(v == f) continue;

        s++;
        ret += DFS(v, u, d, cnt);
    }
    if(!s) ret = 1;
    return ret;
}

int main() {
    int n, d; //FIN;
    while(~scanf("%d%d", &n, &d)) {
        edge_init();
        for(int i = 1; i <= n; i++) {
            scanf("%d", &A[i]);
        }

        for(int i = 1; i <= n - 1; i++) {
            int u, v;
            scanf("%d%d", &u, &v);
            edge_add(u, v);
            edge_add(v, u);
        }

        printf("%d\n", DFS(1, -1, d, 0));
    }
    return 0;
}
