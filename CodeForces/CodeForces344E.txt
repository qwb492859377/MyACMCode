/*
********************************************
*      Author:492859377                    *
*      ProblemID:CodeForces344E            *
*      VjudgeProblemID:46668               *
*      SubmitTime:2015/8/12 15:12:36       *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:1572KB                       *
*      CodeLen:1272B                       *
*      RunTime:93ms                        *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<stack>
#include<queue>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;

const int MX = 1e5 + 5;
const LL INF = 0x3f3f3f3f3f3f3f3f;

int m, n;
LL A[MX], B[MX];

bool ok(LL t) {
    int cur = 1;
    LL R = A[1];
    for(int i = 1; i <= m; i++) {
        if(A[i] - B[cur] > t) return false;

        if(B[cur] <= A[i]) {
            R = max(R, t - A[i] + 2 * B[cur]);
            R = max(R, (t + A[i] + B[cur]) / 2);
            cur++;
        } else if(B[cur] - A[i] <= t) {
            R = max(R, A[i] + t);
            cur++;
        }
        while(cur <= n && B[cur] <= R) cur++;
        if(cur > n) return true;
    }
    return false;
}

int main() {
    scanf("%d%d", &m, &n);
    for(int i = 1; i <= m; i++) {
        scanf("%I64d", &A[i]);
    }
    for(int i = 1; i <= n; i++) {
        scanf("%I64d", &B[i]);
    }

    LL L = 0, R = INF, m, ans;
    while(L <= R) {
        m = (L + R) >> 1;
        if(ok(m)) {
            ans = m;
            R = m - 1;
        } else {
            L = m + 1;
        }
    }
    printf("%I64d\n", ans);
    return 0;
}
