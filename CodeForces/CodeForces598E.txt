/*
********************************************
*      Author:492859377                    *
*      ProblemID:CodeForces598E            *
*      VjudgeProblemID:278774              *
*      SubmitTime:2015/11/22 14:17:31      *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:1308KB                       *
*      CodeLen:1288B                       *
*      RunTime:124ms                       *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<ctime>
#include<stack>
#include<queue>
#include<cstdio>
#include<cctype>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define fuck(x) cout<<"["<<x<<"]"
#define FIN freopen("input.txt","r",stdin)
#define FOUT freopen("output.txt","w+",stdout)
#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;
typedef long long LL;
typedef pair<int, int>PII;

const int MX = 50 + 5;
const LL INF = 0x3f3f3f3f3f3f3f3f;

LL dp[MX][MX][MX];

LL DP(int m, int n, int k) {
    if(m * n < k) return INF;
    if(m * n == k || !k) return 0;
    if(m > n) swap(m, n);
    if(dp[m][n][k] < INF) return dp[m][n][k];

    for(int u = 0; u <= k; u++) {
        for(int i = 1; i <= m / 2; i++) {
            dp[m][n][k] = min(dp[m][n][k], DP(i, n, u) + DP(m - i, n, k - u) + n * n);
        }
        for(int i = 1; i <= n / 2; i++) {
            dp[m][n][k] = min(dp[m][n][k], DP(m, i, u) + DP(m, n - i, k - u) + m * m);
        }
    }
    return dp[m][n][k];
}

int main() {
    int T, m, n, k; //FIN;
    scanf("%d", &T);
    memset(dp, INF, sizeof(dp));
    while(T--) {
        scanf("%d%d%d", &m, &n, &k);
        printf("%I64d\n", DP(m, n, k));
    }
    return 0;
}
