/*
********************************************
*      Author:492859377                    *
*      ProblemID:CodeForces292D            *
*      VjudgeProblemID:38278               *
*      SubmitTime:2015/12/22 20:44:00      *
*      SubmitType:GNU G++ 4.9.2            *
*      Memory:39744KB                      *
*      CodeLen:1889B                       *
*      RunTime:654ms                       *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<ctime>
#include<stack>
#include<queue>
#include<cstdio>
#include<cctype>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define fuck(x) cout<<"["<<x<<"]"
#define FIN freopen("input.txt","r",stdin)
#define FOUT freopen("output.txt","w+",stdout)
using namespace std;
typedef long long LL;
typedef pair<int, int>PII;
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1

const int MX = 1e4 + 5;
const int MP = 5e2 + 5;

int n, m;
int PL[MX][MP], PR[MX][MP], tp[MP];
int L[MX], R[MX];

int find(int P[], int x) {
    return P[x] == x ? x : (P[x] = find(P, P[x]));
}

void presolve() {
    for(int i = 1; i <= n; i++) PL[0][i] = i;
    for(int i = 1; i <= m; i++) {
        for(int j = 1; j <= n; j++) PL[i][j] = PL[i - 1][j];
        int p1 = find(PL[i], L[i]), p2 = find(PL[i], R[i]);
        if(p1 != p2) PL[i][p2] = p1;
    }

    for(int i = 1; i <= n; i++) PR[m + 1][i] = i;
    for(int i = m; i >= 1; i--) {
        for(int j = 1; j <= n; j++) PR[i][j] = PR[i + 1][j];
        int p1 = find(PR[i], L[i]), p2 = find(PR[i], R[i]);
        if(p1 != p2) PR[i][p2] = p1;
    }
}

int solve(int l, int r) {
    for(int i = 1; i <= n; i++) tp[i] = PL[l][i];
    for(int i = 1; i <= n; i++) {
        int u = i, v = PR[r][i];
        int p1 = find(tp, u), p2 = find(tp, v);
        if(p1 != p2) tp[p2] = p1;
    }

    int ret = 0;
    for(int i = 1; i <= n; i++) {
        if(i == find(tp, i)) ret++;
    }
    return ret;
}

int main() {
    //FIN;
    while(~scanf("%d%d", &n, &m)) {
        for(int i = 1; i <= m; i++) {
            scanf("%d%d", &L[i], &R[i]);
        }
        presolve();

        int Q, l, r;
        scanf("%d", &Q);
        while(Q--) {
            scanf("%d%d", &l, &r);
            printf("%d\n", solve(l - 1, r + 1));
        }
    }
    return 0;
}
