/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU4584                   *
*      VjudgeProblemID:46101               *
*      SubmitTime:2015/6/3 19:07:00        *
*      SubmitType:C++                      *
*      Memory:1604KB                       *
*      CodeLen:2000B                       *
*      RunTime:15ms                        *
********************************************
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;
typedef long long LL;
const int MX=45;
const int INF=0x3f3f3f3f;
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1
#define root 0,n,1
char a[MX][MX];


int main ()
{
    int n, m;
    while (scanf("%d %d", &n, &m), n + m) {
        for (int i = 1; i <= n; i++) {
            scanf("%s", a[i] + 1);
        }


        int Min = INF, x1, y1, x2, y2;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (a[i][j] == 'H') {
                    for (int k = 1; k <= n; k++) {
                        for (int w = 1; w <= m; w++) {
                            if (a[k][w] == 'C') {
                                int t = abs(i - k) + abs(j - w);
                                if (t < Min) {
                                    x1 = i;
                                    y1 = j;
                                    x2 = k;
                                    y2 = w;
                                    Min = t;
                                }
                            }
                        }
                    }
                }
                if (a[i][j] == 'C') {
                    for (int k = 1; k <= n; k++) {
                        for (int w = 1; w <= m; w++) {
                            if (a[k][w] == 'H') {
                                int t = abs(i - k) + abs(j - w);
                                if (t < Min) {
                                    x2 = i;
                                    y2 = j;
                                    x1 = k;
                                    y1 = w;
                                    Min = t;
                                }
                            }
                        }
                    }
                }
            }
        }

        printf("%d %d %d %d\n", x1 - 1, y1 - 1, x2 - 1, y2 - 1);
    }
    return 0;
}
