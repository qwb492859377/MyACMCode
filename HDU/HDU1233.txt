/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU1233                   *
*      VjudgeProblemID:20289               *
*      SubmitTime:2015/7/31 13:28:19       *
*      SubmitType:C++                      *
*      Memory:1680KB                       *
*      CodeLen:1099B                       *
*      RunTime:171ms                       *
********************************************
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<algorithm>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;
#define For(i,x,y) for(int i=x;i<=y;i++)

const int MX = 1e4 + 5;
const int INF = 0x3f3f3f3f;

int P[MX];
int find(int x) {
    return P[x] == x ? x : (P[x] = find(P[x]));
}

struct Edge {
    int u, v, cost;
    bool operator<(const Edge &b)const {
        return cost < b.cost;
    }
} E[MX];

int main() {
    int n, m;
    while(~scanf("%d", &n), n) {
        For(i, 1, n) P[i] = i;

        m = n * (n - 1) / 2;
        For(i, 1, m) {
            scanf("%d%d%d", &E[i].u, &E[i].v, &E[i].cost);
        }
        sort(E + 1, E + 1 + m);

        int ans = 0, cnt = 0;
        For(i, 1, m) {
            int p1 = find(E[i].u), p2 = find(E[i].v);
            if(p1 != p2) {
                cnt++;
                ans += E[i].cost;
                P[p1] = p2;
            }
        }
        if(cnt != n - 1) {
            printf("?\n");
        } else {
            printf("%d\n", ans);
        }
    }
    return 0;
}
