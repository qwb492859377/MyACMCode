/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU1598                   *
*      VjudgeProblemID:18883               *
*      SubmitTime:2015/2/1 18:37:22        *
*      SubmitType:C++                      *
*      Memory:1100KB                       *
*      CodeLen:1180B                       *
*      RunTime:156ms                       *
********************************************
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
const int maxn=1000+5;
const int INF=0x3f3f3f3f;

int p[205];
int find(int x){
    return p[x]==x?x:(p[x]=find(p[x]));
}

struct Edge{
    int u,v,sp;
    bool operator<(const Edge &b) const{
        return sp<b.sp;
    }
}e[maxn];

int main(){
    int n,m,q,begin,end;
    while(~scanf("%d%d",&n,&m)){
        for(int i=0;i<m;i++){
            scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].sp);
        }
        sort(e,e+m);
        scanf("%d",&q);
        for(int w=0;w<q;w++){
            scanf("%d%d",&begin,&end);
            int ans=INF;
            for(int i=0;i<m;i++){

                for(int x=1;x<=n;x++){
                    p[x]=x;
                }

                for(int j=i;j<m;j++){
                    int p1=find(e[j].u);
                    int p2=find(e[j].v);
                    p[p2]=p1;
                    if(find(begin)==find(end)){
                        ans=min(ans,e[j].sp-e[i].sp);
                        break;
                    }
                }
            }
            printf("%d\n",ans==INF?-1:ans);
        }
    }
    return 0;
}
