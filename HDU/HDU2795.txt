/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU2795                   *
*      VjudgeProblemID:11557               *
*      SubmitTime:2015/8/7 12:23:26        *
*      SubmitType:C++                      *
*      Memory:6320KB                       *
*      CodeLen:1204B                       *
*      RunTime:2667ms                      *
********************************************
*/
#include<cstdio>
#include<cmath>
#include<cstring>
#include<queue>
#include<vector>
#include<map>
#include<set>
#include<string>
#include<iostream>
#include<functional>
#include<algorithm>

using namespace std;
typedef long long LL;
typedef pair<LL, int> PLI;

const int MX = 3e5 + 5;
const int INF = 0x3f3f3f3f;
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1
#define root 1,tot,1

int h, w, n, t, tot;
int MIN[MX << 2];

void push_up(int rt) {
    MIN[rt] = min(MIN[rt << 1] , MIN[rt << 1 | 1]);
}

void build(int l, int r, int rt) {
    memset(MIN, 0, sizeof(MIN));
}

int query(int t, int l, int r, int rt) {
    if(l == r) {
        MIN[rt] += t;
        return l;
    }

    int m = (l + r) >> 1, ret;
    if(MIN[rt << 1] + t <= w) ret = query(t, lson);
    else ret = query(t, rson);
    push_up(rt);
    return ret;
}

int main() {
    while(~scanf("%d%d%d", &h, &w, &n)) {
        tot = min(h, n);
        build(root);

        for(int i = 1; i <= n; i++) {
            scanf("%d", &t);
            if(MIN[1] + t > w) {
                printf("-1\n");
                continue;
            } else {
                printf("%d\n", query(t, root));
            }
        }
    }
    return 0;
}
