/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU1022                   *
*      VjudgeProblemID:18468               *
*      SubmitTime:2015/7/21 13:25:04       *
*      SubmitType:C++                      *
*      Memory:1640KB                       *
*      CodeLen:1114B                       *
*      RunTime:0ms                         *
********************************************
*/
#include<cstdio>
#include<cmath>
#include<cstring>
#include<queue>
#include<cctype>
#include<stack>
#include<vector>
#include<functional>
#include<algorithm>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;

const int MX = 20000 + 5;
const int INF = 0x3f3f3f3f;

char S1[MX], S2[MX];
int oper[MX], tot;
int dist[][2] = {{1, 0}, { -1, 0}, {0, 1}, {0, -1}};

int main() {
    int n, rear, cur;
    while(~scanf("%d%s%s", &n, S1 + 1, S2 + 1)) {
        tot = 0, cur = 1, rear = 1;

        stack<char>work;
        while(cur <= n + 1) {
            if(!work.empty() && work.top() == S2[rear]) {
                oper[tot++] = 1;
                work.pop();
                rear++;
            } else {
                oper[tot++] = 0;
                work.push(S1[cur++]);
            }
        }

        if(cur == n + 2 && rear == n + 1) {
            printf("Yes.\n");
            for(int i = 0; i < tot - 1; i++) {
                printf("%s\n", oper[i] ? "out" : "in");
            }
        } else {
            printf("No.\n");
        }
        printf("FINISH\n");
    }
    return 0;
}
