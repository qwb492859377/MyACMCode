/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU1274                   *
*      VjudgeProblemID:40585               *
*      SubmitTime:2015/11/21 12:20:55      *
*      SubmitType:C++                      *
*      Memory:1696KB                       *
*      CodeLen:1636B                       *
*      RunTime:0ms                         *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<ctime>
#include<stack>
#include<queue>
#include<cstdio>
#include<cctype>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define fuck(x) cout<<"["<<x<<"]"
#define FIN freopen("input.txt","r",stdin)
#define FOUT freopen("output.txt","w+",stdout)
#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;
typedef long long LL;
typedef pair<int, int>PII;

const int MX = 1e5 + 5;

int n;
char S[MX];

void solve(int L, int R) {
    for(int i = L; i <= R; i++) {
        if(isalpha(S[i])) putchar(S[i]);
        else if(isdigit(S[i])) {
            int t = S[i] - '0';
            while(i + 1 <= R && isdigit(S[++i])) t = t * 10 + S[i] - '0';
            if(S[i] == '(') {
                int l = i, p = 0;
                for(; i <= R; i++) {
                    if(S[i] == '(') p++;
                    if(S[i] == ')') p--;
                    if(S[i] == ')' && !p) break;
                }
                for(int j = 1; j <= t; j++) solve(l + 1, i - 1);
            } else {
                for(int j = 1; j <= t; j++) putchar(S[i]);
            }
        } else {
            int l = i, p = 0;
            for(; i <= R; i++) {
                if(S[i] == '(') p++;
                if(S[i] == ')') p--;
                if(S[i] == ')' && !p) break;
            }
            solve(l + 1, i - 1);
        }
    }
}

int main() {
    int T; //FIN;
    scanf("%d", &T);
    while(T--) {
        scanf("%s", S + 1);
        n = strlen(S + 1);
        solve(1, n);
        printf("\n");
    }
    return 0;
}
