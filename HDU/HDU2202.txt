/*
********************************************
*      Author:492859377                    *
*      ProblemID:HDU2202                   *
*      VjudgeProblemID:32245               *
*      SubmitTime:2015/4/2 13:20:46        *
*      SubmitType:C++                      *
*      Memory:2108KB                       *
*      CodeLen:1197B                       *
*      RunTime:78ms                        *
********************************************
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;
typedef long long LL;
const int MX=50000+5;

struct Node{
    double x,y;
    bool operator<(const Node&b) const{
        if(x==b.x) return y<b.y;
        return x<b.x;
    }
}P[MX],R[MX];

double cross(Node a,Node b,Node c){
    return ((b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y));
}

int convex(int n){
    int m=0,k;
    sort(P,P+n);
    for(int i=0;i<n;i++){
        while(m>1&&cross(R[m-1],P[i],R[m-2])<=0) m--;
        R[m++]=P[i];
    }

    k=m;
    for(int i=n-2;i>=0;i--){
        while(m>k&&cross(R[m-1],P[i],R[m-2])<=0) m--;
        R[m++]=P[i];
    }
    if(n>1) m--;
    return m;
}

int main(){
    int n;
    while(~scanf("%d",&n)){
        for(int i=0;i<n;i++){
            scanf("%lf%lf",&P[i].x,&P[i].y);
        }

        int rear=convex(n);
        double ans=0;
        for(int i=0;i<rear-2;i++){
            for(int j=i+1;j<rear-1;j++){
                for(int k=j+1;k<rear;k++){
                    ans=max(ans,cross(R[i],R[j],R[k])/2);
                }
            }
        }
        printf("%.2lf\n",ans);
    }
    return 0;
}
