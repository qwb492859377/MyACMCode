/*
********************************************
*      Author:492859377                    *
*      ProblemID:UVA12657                  *
*      VjudgeProblemID:47066               *
*      SubmitTime:2015/8/17 13:20:25       *
*      SubmitType:C++ 4.8.2                *
*      Memory:0KB                          *
*      CodeLen:1938B                       *
*      RunTime:93ms                        *
********************************************
*/
#include<map>
#include<set>
#include<cmath>
#include<stack>
#include<queue>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<functional>
#define FIN freopen("input.txt","r",stdin)

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;

const int MX = 1e5 + 5;
const int INF = 0x3f3f3f3f;

int Left[MX], Right[MX];

void link(int L, int R) {
    Right[L] = R;
    Left[R] = L;
}

int main() {
    int n, m, kase = 0;
    while(~scanf("%d%d", &n, &m)) {
        for(int i = 1; i <= n; i++) {
            Left[i] = i - 1;
            Right[i] = (i + 1) % (n + 1);
        }
        Right[0] = 1; Left[0] = n;
        int op, X, Y, inv = 0;

        while(m--) {
            scanf("%d", &op);
            if(op == 4) inv = !inv;
            else {
                scanf("%d%d", &X, &Y);
                if(op == 3 && Right[Y] == X) swap(X, Y);
                if(op != 3 && inv) op = 3 - op;
                if(op == 1 && X == Left[Y]) continue;
                if(op == 2 && X == Right[Y]) continue;

                int LX = Left[X], RX = Right[X], LY = Left[Y], RY = Right[Y];
                if(op == 1) {
                    link(LX, RX); link(LY, X); link(X, Y);
                } else if(op == 2) {
                    link(LX, RX); link(Y, X); link(X, RY);
                } else if(op == 3) {
                    if(Right[X] == Y) {
                        link(LX, Y); link(Y, X); link(X, RY);
                    } else {
                        link(LX, Y); link(Y, RX); link(LY, X); link(X, RY);
                    }
                }
            }
        }

        int b = 0;
        LL ans = 0;
        for(int i = 1; i <= n; i++) {
            b = Right[b];
            if(i % 2 == 1) ans += b;
        }
        if(inv && n % 2 == 0) ans = (LL)n * (n + 1) / 2 - ans;
        printf("Case %d: %lld\n", ++kase, ans);
    }
    return 0;
}
